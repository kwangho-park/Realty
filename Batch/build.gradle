
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.1'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'


java {
    sourceCompatibility = '12'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
}

repositories {
    mavenCentral()
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-batch'  // spring batch 4.0
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'          // new db connection lib (used)
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.16.0'     // base64 encoding
    implementation 'org.json:json:20210307'

    runtimeOnly 'mysql:mysql-connector-java:8.0.25'

    testImplementation 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'      // JUnit 포함됨
    testImplementation 'org.springframework.batch:spring-batch-test'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2' // JUnit 5를 사용하는 경우

    compileOnly 'org.projectlombok:lombok'
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

//bootJar {
//    duplicatesStrategy 'exclude'        // 중복된 META-INF/MANIFEST.MF 를 제외함 (=main 함수를 지정하는 설정파일)
//}
